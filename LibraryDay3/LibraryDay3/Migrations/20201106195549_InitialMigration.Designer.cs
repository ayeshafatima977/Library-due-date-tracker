// <auto-generated />
using System;
using LibraryDay3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryDay3.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20201106195549_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LibraryDay3.Models.Author", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DeathDate")
                        .HasColumnName("deathDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(60)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("ID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            BirthDate = new DateTime(1985, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeathDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "J.K.Rowling"
                        },
                        new
                        {
                            ID = -2,
                            BirthDate = new DateTime(1676, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeathDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "William ShakeSpeare"
                        },
                        new
                        {
                            ID = -3,
                            BirthDate = new DateTime(1865, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeathDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alice Walker"
                        },
                        new
                        {
                            ID = -4,
                            BirthDate = new DateTime(1735, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeathDate = new DateTime(1910, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rachel Kushner"
                        },
                        new
                        {
                            ID = -5,
                            BirthDate = new DateTime(1775, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DeathDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jane Austen"
                        });
                });

            modelBuilder.Entity("LibraryDay3.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(10)");

                    b.Property<int>("AuthorID")
                        .HasColumnName("author_id")
                        .HasColumnType("int(10)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnName("publicationDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_general_ci");

                    b.HasKey("ID");

                    b.HasIndex("AuthorID")
                        .HasName("FK_Book_Author");

                    b.ToTable("book");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            AuthorID = -1,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublicationDate = new DateTime(1994, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Measure for Measure"
                        },
                        new
                        {
                            ID = -2,
                            AuthorID = -1,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublicationDate = new DateTime(1800, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Harry Potter and the Order of the Phoenix"
                        },
                        new
                        {
                            ID = -3,
                            AuthorID = -2,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublicationDate = new DateTime(1980, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Hamlet"
                        },
                        new
                        {
                            ID = -4,
                            AuthorID = -1,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublicationDate = new DateTime(2002, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Harry Potter And The Philosopher's Stone"
                        },
                        new
                        {
                            ID = -5,
                            AuthorID = -3,
                            DueDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PublicationDate = new DateTime(2012, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Casual Vacancy"
                        });
                });

            modelBuilder.Entity("LibraryDay3.Models.Borrow", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10)");

                    b.Property<int>("BookID")
                        .HasColumnName("book_id")
                        .HasColumnType("int(10)");

                    b.Property<DateTime>("CheckedOutDate")
                        .HasColumnName("checked_out_date")
                        .HasColumnType("date");

                    b.Property<DateTime>("DueDate")
                        .HasColumnName("due_date")
                        .HasColumnType("date");

                    b.Property<int>("ExtensionCount")
                        .HasColumnName("ExtensionCount")
                        .HasColumnType("int(10)");

                    b.Property<DateTime?>("ReturnedDate")
                        .HasColumnName("returned_date")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("BookID")
                        .HasName("FK_Borrow_Book");

                    b.ToTable("Borrows");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            BookID = -2,
                            CheckedOutDate = new DateTime(2019, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2020, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExtensionCount = 0,
                            ReturnedDate = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -2,
                            BookID = -4,
                            CheckedOutDate = new DateTime(2019, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExtensionCount = 0,
                            ReturnedDate = new DateTime(2020, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -3,
                            BookID = -1,
                            CheckedOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2020, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExtensionCount = 0
                        },
                        new
                        {
                            ID = -4,
                            BookID = -5,
                            CheckedOutDate = new DateTime(2020, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2020, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExtensionCount = 0,
                            ReturnedDate = new DateTime(2020, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = -5,
                            BookID = -1,
                            CheckedOutDate = new DateTime(2020, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2020, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExtensionCount = 0,
                            ReturnedDate = new DateTime(2020, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("LibraryDay3.Models.Book", b =>
                {
                    b.HasOne("LibraryDay3.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorID")
                        .HasConstraintName("FK_Book_Author")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryDay3.Models.Borrow", b =>
                {
                    b.HasOne("LibraryDay3.Models.Book", "Book")
                        .WithMany("Borrows")
                        .HasForeignKey("BookID")
                        .HasConstraintName("FK_Borrow_Book")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
